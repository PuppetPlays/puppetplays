version: 2.1

parameters:
  web-image-staging:
    type: string
    default: "intactiledesign/puppetplays-web:<< pipeline.git.revision >>-staging"
  web-image-release-staging:
    type: string
    default: "intactiledesign/puppetplays-web:latest-staging"
  web-image:
    type: string
    default: "intactiledesign/puppetplays-web:<< pipeline.git.revision >>"
  web-image-release:
    type: string
    default: "intactiledesign/puppetplays-web:latest"
  admin-image-staging:
    type: string
    default: "intactiledesign/puppetplays-admin:<< pipeline.git.revision >>-staging"
  admin-image-release-staging:
    type: string
    default: "intactiledesign/puppetplays-admin:latest-staging"
  admin-image:
    type: string
    default: "intactiledesign/puppetplays-admin:<< pipeline.git.revision >>"
  admin-image-release:
    type: string
    default: "intactiledesign/puppetplays-admin:latest"

jobs:
  build_web_staging:
    executor:
      name: node/default
      tag: '14.15'
    working_directory: ~/project/puppetplays-web
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Run test suites and build code
          command: NEXT_PUBLIC_API_URL=https://api.staging.puppetplays.intactile.info yarn run deploy
          environment:
            NEXT_PUBLIC_API_URL: https://api.staging.puppetplays.intactile.info
  build_web_production:
    executor:
      name: node/default
      tag: '14.15'
    working_directory: ~/project/puppetplays-web
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Run test suites and build code
          command: NEXT_PUBLIC_API_URL=https://api.puppetplays.eu yarn run deploy
          environment:
            NEXT_PUBLIC_API_URL: https://api.puppetplays.eu
  docker_web_staging:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: 
          name: Publish web staging image to docker hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
            docker pull << pipeline.parameters.web-image-staging >> || true
            docker build --pull -t << pipeline.parameters.web-image-staging >> --cache-from << pipeline.parameters.web-image-staging >> puppetplays-web
            docker push << pipeline.parameters.web-image-staging >>
            docker pull << pipeline.parameters.web-image-staging >>
            docker tag << pipeline.parameters.web-image-staging >> << pipeline.parameters.web-image-release-staging >>
            docker push << pipeline.parameters.web-image-release-staging >>
  docker_web_production:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: 
          name: Publish web production image to docker hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
            docker pull << pipeline.parameters.web-image >> || true
            docker build --pull -t << pipeline.parameters.web-image >> --cache-from << pipeline.parameters.web-image >> puppetplays-web
            docker push << pipeline.parameters.web-image >>
            docker pull << pipeline.parameters.web-image >>
            docker tag << pipeline.parameters.web-image >> << pipeline.parameters.web-image-release >>
            docker push << pipeline.parameters.web-image-release >>
  docker_admin_staging:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Publish admin staging image to docker hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
            docker pull << pipeline.parameters.admin-image-staging >> || true
            docker build --pull -t << pipeline.parameters.admin-image-staging >> --cache-from << pipeline.parameters.admin-image-staging >> puppetplays-admin
            docker push << pipeline.parameters.admin-image-staging >>
            docker pull << pipeline.parameters.admin-image-staging >>
            docker tag << pipeline.parameters.admin-image-staging >> << pipeline.parameters.admin-image-release-staging >>
            docker push << pipeline.parameters.admin-image-release-staging >>
  docker_admin_production:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Publish admin production image to docker hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
            docker pull << pipeline.parameters.admin-image >> || true
            docker build --pull -t << pipeline.parameters.admin-image >> --cache-from << pipeline.parameters.admin-image >> puppetplays-admin
            docker push << pipeline.parameters.admin-image >>
            docker pull << pipeline.parameters.admin-image >>
            docker tag << pipeline.parameters.admin-image >> << pipeline.parameters.admin-image-release >>
            docker push << pipeline.parameters.admin-image-release >>
  deploy_staging:
    machine:
      image: ubuntu-2004:202101-01
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD_STAGING
      POSTGRES_USER: puppetplays
      POSTGRES_DB: puppetplays
      PUPPETPLAYS_VERSION: << pipeline.git.revision >>-staging
      PUPPETPLAYS_HOST_DIR: /var/lib/puppetplays
      SECURITY_KEY: $SECURITY_KEY_STAGING
      ENVIRONMENT: staging
      SITE_URL: https://staging.puppetplays.intactile.info
      CP_URL: https://admin.staging.puppetplays.intactile.info
      COOKIE_DOMAIN: .staging.puppetplays.intactile.info
      EMAIL_HOSTNAME: 0.0.0.0
      EMAIL_PORT: 1025
      EMAIL_SENDER: no-reply@intactile.info
      NEXT_PUBLIC_API_URL: https://api.staging.puppetplays.intactile.info
      DOCKER_HOST: ssh://root@104.236.6.205
      COMPOSE_PARAMIKO_SSH: 1
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "43:e4:82:b2:69:24:9e:79:4a:d4:73:3f:97:2b:67:d8"
      - run: 
          name: Deploy to staging server
          command: |
            mkdir -p ~/.docker
            echo -e "$DOCKER_STAGING_TLS_CA" > ~/.docker/ca.pem
            echo -e "$DOCKER_STAGING_TLS_CERT" > ~/.docker/cert.pem
            echo -e "$DOCKER_STAGING_TLS_KEY" > ~/.docker/key.pem
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
            cd ./puppetplays-deploy
            ./deploy.sh
  deploy_production:
    machine:
      image: ubuntu-2004:202101-01
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD_PRODUCTION
      POSTGRES_USER: puppetplays
      POSTGRES_DB: puppetplays
      PUPPETPLAYS_VERSION: << pipeline.git.revision >>
      PUPPETPLAYS_HOST_DIR: /var/lib/puppetplays
      SECURITY_KEY: $SECURITY_KEY_PRODUCTION
      ENVIRONMENT: production
      SITE_URL: https://puppetplays.eu
      CP_URL: https://admin.puppetplays.eu
      COOKIE_DOMAIN: .puppetplays.eu
      EMAIL_HOSTNAME: relay.huma-num.fr
      EMAIL_PORT: 25
      EMAIL_SENDER: no-reply@puppetplays.eu
      NEXT_PUBLIC_API_URL: https://api.puppetplays.eu
      DOCKER_HOST: ssh://tpaillot@134.158.38.161
      COMPOSE_PARAMIKO_SSH: 1
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "43:e4:82:b2:69:24:9e:79:4a:d4:73:3f:97:2b:67:d8"
      - run: 
          name: Deploy to production server
          command: |
            mkdir -p ~/.docker
            echo -e "$DOCKER_PRODUCTION_TLS_CA" > ~/.docker/ca.pem
            echo -e "$DOCKER_PRODUCTION_TLS_CERT" > ~/.docker/cert.pem
            echo -e "$DOCKER_PRODUCTION_TLS_KEY" > ~/.docker/key.pem
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
            cd ./puppetplays-deploy
            ./deploy.sh

orbs:
  node: circleci/node@4.1.0

workflows:
  build_and_deploy_on_staging:
    jobs:
      - build_web_staging:
          filters:
            branches:
              only:
                - develop
                - release
      - docker_web_staging:
          requires:
            - build_web_staging
      - docker_admin_staging:
          requires:
            - build_web_staging
      - hold_staging_deploy:
          type: approval
          requires:
            - build_web_staging
            - docker_web_staging
            - docker_admin_staging
      - deploy_staging:
          requires:
            - hold_staging_deploy
  build_and_deploy_on_production:
    jobs:
      - build_web_production:
          filters:
            branches:
              only: master
      - docker_web_production:
          requires:
            - build_web_production
      - docker_admin_production:
          requires:
            - build_web_production
      - hold_production_deploy:
          type: approval
          requires:
            - build_web_production
            - docker_web_production
            - docker_admin_production
      - deploy_production:
          requires:
            - hold_production_deploy
  