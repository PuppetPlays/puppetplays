version: 2.1

parameters:
  web-image:
    type: string
    default: "intactiledesign/puppetplays-web:<< pipeline.git.revision >>"
  web-image-release:
    type: string
    default: "intactiledesign/puppetplays-web:latest"
  admin-image:
    type: string
    default: "intactiledesign/puppetplays-admin:<< pipeline.git.revision >>"
  admin-image-release:
    type: string
    default: "intactiledesign/puppetplays-admin:latest"

jobs:
  build_frontend:
    docker:
      - image: 'cimg/node:14.14.0'
    steps:
      - checkout
      - npm install -g yarn
      - yarn install --frozen-lockfile
      - yarn build
  docker_frontend:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: |
          echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
          docker pull << pipeline.parameters.web-image >> || true
          docker build --pull -t << pipeline.parameters.web-image >> --cache-from << pipeline.parameters.web-image >> puppetplays-web
          docker push << pipeline.parameters.web-image >>
          docker pull << pipeline.parameters.web-image >>
          docker tag << pipeline.parameters.web-image >> << pipeline.parameters.web-image-release >>
          docker push << pipeline.parameters.web-image-release >>
  docker_backend:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: |
          echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
          docker pull << pipeline.parameters.admin-image >> || true
          docker build --pull -t << pipeline.parameters.admin-image >> --cache-from << pipeline.parameters.admin-image >> puppetplays-admin
          docker push << pipeline.parameters.admin-image >>
          docker pull << pipeline.parameters.admin-image >>
          docker tag << pipeline.parameters.admin-image >> << pipeline.parameters.admin-image-release >>
          docker push << pipeline.parameters.admin-image-release >>
              
workflows:
  build:
    jobs:
      - build_frontend
      - docker_frontend:
          requires:
              - build_frontend
      - docker_backend
      - hold:
          type: approval
          requires:
            - build_frontend
            - docker_frontend
            - docker_backend
      - deploy_staging:
          requires:
            - hold
  